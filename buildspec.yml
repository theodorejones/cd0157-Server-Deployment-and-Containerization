---
version: 0.2


phases:
  install:
    runtime-versions:
      python: 3.7
    commands:
  pre_build:
      commands:
        - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple_jwt_api.yml
        - $(aws ecr get-login --no-include-email)
        #- export KUBECONFIG=$HOME/.kube/config
        - echo `ls -l`
  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      #- aws sts get-caller-identity
      #- kubectl version
      #- kubectl config current-context
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      
      # # Setup kubectl with our EKS Cluster              
      # - echo "Update Kube Config"
      - aws sts get-caller-identity
      # - kubectl version
      - kubectl version --short --client
      - aws --version
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-2
      - cat /root/.kube/config
      - kubectl get pods
      - kubectl apply -f simple_jwt_api.yml
      - printf '[{"name":"simple-jwt-api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
artifacts:
  files: build.json
env:
  parameter-store:         
    JWT_SECRET: JWT_SECRET